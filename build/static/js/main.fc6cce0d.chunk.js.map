{"version":3,"sources":["store/postsReducer.js","asyncActions/posts.js","components/Like.js","components/Remove.js","components/Post.js","components/Filter.js","App.js","store/index.js","index.js"],"names":["defaultState","posts","isFetching","isFiltered","ADD_POSTS","TOOGLE_LIKE_POST","REMOVE_POST","TOOGLE_FILTER_POSTS","fetchPosts","dispatch","fetch","then","response","json","type","payload","Like","active","makeActive","xmlns","width","height","viewBox","className","onClick","d","fill","Remove","removeItem","Post","img","title","id","isLiked","useDispatch","removePostAction","likePostAction","src","alt","Filter","useSelector","state","postsReducer","App","useEffect","length","postsArr","filter","item","map","thumbnailUrl","post","rootReducer","combineReducers","action","filteredPosts","postsWithLike","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc6cce0d.chunk.js","sourcesContent":["//Состояние по умолчанию\r\nconst defaultState = {\r\n  posts: [],\r\n  isFetching: true,\r\n  isFiltered: false,\r\n};\r\n\r\n//Типы action\r\nexport const ADD_POSTS = \"ADD_POSTS\";\r\nexport const TOOGLE_LIKE_POST = \"TOOGLE_LIKE_POST\";\r\nexport const REMOVE_POST = \"REMOVE_POST\";\r\nexport const TOOGLE_FILTER_POSTS = \"FILTER_POSTS\";\r\n\r\n//Reduser\r\nexport const postsReducer = (state = defaultState, action = {}) => {\r\n  switch (action.type) {\r\n    //Добавление постов при начальной загрузке\r\n    case ADD_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, ...action.payload],\r\n        isFetching: false,\r\n      };\r\n    // Удаление поста путём фильтрации\r\n    case REMOVE_POST:\r\n      let filteredPosts = state.posts.filter((item) => item.id !== action.id);\r\n      return {\r\n        ...state,\r\n        posts: [...filteredPosts],\r\n      };\r\n    // Переключение состояние лайка у поста\r\n    case TOOGLE_LIKE_POST:\r\n      let postsWithLike = state.posts.map((item) => {\r\n        if (item.id === action.id) {\r\n          item.isLiked = item.isLiked ? false : true;\r\n        }\r\n\r\n        return item;\r\n      });\r\n      return {\r\n        ...state,\r\n        posts: [...postsWithLike],\r\n      };\r\n    // Включение, выключение фильтрации\r\n    case TOOGLE_FILTER_POSTS: {\r\n      return {\r\n        ...state,\r\n        isFiltered: !state.isFiltered,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//Actions\r\nexport const addPostsAction = (payload) => ({ type: ADD_POSTS, payload });\r\nexport const removePostAction = (id) => ({ type: REMOVE_POST, id });\r\nexport const likePostAction = (id) => ({ type: TOOGLE_LIKE_POST, id });\r\nexport const toogleFilterPostsAction = () => ({ type: TOOGLE_FILTER_POSTS });\r\n","import { addPostsAction } from \"../store/postsReducer\";\r\n\r\n//Получение постов\r\nexport const fetchPosts = () => {\r\n  return function (dispatch) {\r\n    fetch(\"https://jsonplaceholder.typicode.com/photos/?_limit=21\")\r\n      .then((response) => response.json())\r\n      .then((json) => dispatch(addPostsAction(json)));\r\n  };\r\n};\r\n","import React from \"react\";\r\n\r\nconst Like = ({ active, makeActive }) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      className={`like ${active ? \"active\" : \"\"}`}\r\n      onClick={makeActive}\r\n    >\r\n      <path\r\n        d=\"M12 4.435c-1.989-5.399-12-4.597-12 3.568 0 4.068 3.06 9.481 12 14.997 8.94-5.516 12-10.929 12-14.997 0-8.118-10-8.999-12-3.568z\"\r\n        fill=\"gray\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React from \"react\";\r\n\r\nconst Remove = ({ removeItem }) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      className=\"remove\"\r\n      onClick={removeItem}\r\n    >\r\n      <path\r\n        d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\"\r\n        fill=\"red\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Remove;\r\n","import React from \"react\";\r\nimport Like from \"./Like\";\r\nimport Remove from \"./Remove\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { removePostAction, likePostAction } from \"../store/postsReducer\";\r\n\r\nconst Post = ({ img, title, id, isLiked = false }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  //Удаление поста\r\n  function removePost() {\r\n    dispatch(removePostAction(id));\r\n  }\r\n\r\n  //Лайк поста\r\n  function likePost() {\r\n    dispatch(likePostAction(id));\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card__img--container\">\r\n        <Remove removeItem={removePost} />\r\n        <Like active={isLiked} makeActive={likePost} />\r\n        <img className=\"card__img\" src={img} alt=\"\" />\r\n      </div>\r\n      <span className=\"card__title\">{title}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Like from \"./Like\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toogleFilterPostsAction } from \"../store/postsReducer\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const isFiltered = useSelector((state) => state.postsReducer.isFiltered);\r\n\r\n  function filterPosts() {\r\n    dispatch(toogleFilterPostsAction());\r\n  }\r\n\r\n  return (\r\n    <div className=\"filter\">\r\n      <Like active={isFiltered} makeActive={filterPosts} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchPosts } from \"./asyncActions/posts\";\r\nimport Post from \"./components/Post\";\r\nimport Filter from \"./components/Filter\";\r\n\r\nconst App = () => {\r\n  const posts = useSelector((state) => state.postsReducer.posts);\r\n  const isFetching = useSelector((state) => state.postsReducer.isFetching);\r\n  const isFiltered = useSelector((state) => state.postsReducer.isFiltered);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPosts());\r\n  }, []); // eslint-disable-line\r\n\r\n  if (isFetching) {\r\n    return <div className=\"loading\">Идёт загрузка...</div>;\r\n  } else if (!posts.length) {\r\n    return <div className=\"loading\">Постов нет</div>;\r\n  }\r\n\r\n  let post = (item) => (\r\n    <Post\r\n      img={item.thumbnailUrl}\r\n      title={item.title}\r\n      key={item.id}\r\n      id={item.id}\r\n      isLiked={item.isLiked}\r\n    />\r\n  );\r\n\r\n  let postsArr = isFiltered\r\n    ? posts.filter((item) => item.isLiked)\r\n    : posts.map((item) => item);\r\n\r\n  return (\r\n    <>\r\n      <Filter />\r\n      <div className=\"card--container\">\r\n        {postsArr.length\r\n          ? postsArr.map((item) => post(item))\r\n          : \"Нет постов с лайками\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { postsReducer } from \"./postsReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst rootReducer = combineReducers({\r\n  postsReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}